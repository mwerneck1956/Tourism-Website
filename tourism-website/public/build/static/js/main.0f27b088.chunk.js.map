{"version":3,"sources":["assets/images/learnMoreImage.png","assets/images/Fanjingshan.png","assets/images/Skadar.png","assets/images/RajaAmpat.png","assets/images/Vevey.png","components/Navbar/Navbar.jsx","Sections/LearnMore/LearnMore.jsx","Sections/FeaturedDestinations/FeaturedDestinations.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","Grid","className","spacing","justify","alignItems","container","direction","lg","href","xl","justifyContent","Button","variant","style","width","LearnMore","sm","md","xs","src","learnMoreImage","destinations","window","innerHeight","innerWidth","name","coutnry","url","Fanjinghsan","Skadar","Vevey","RajaAmpat","FeaturedDestinations","useState","setJustify","setWidth","useEffect","addEventListener","console","log","marginTop","map","destination","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f27b088.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/learnMoreImage.c2272ed1.png\";","module.exports = __webpack_public_path__ + \"static/media/Fanjingshan.aec6a66c.png\";","module.exports = __webpack_public_path__ + \"static/media/Skadar.d685a8db.png\";","module.exports = __webpack_public_path__ + \"static/media/RajaAmpat.79af7a24.png\";","module.exports = __webpack_public_path__ + \"static/media/Vevey.53f33c2c.png\";","import React, { useState } from \"react\";\r\n//Core components\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n//Css\r\nimport \"./Navbar.css\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <Grid\r\n      className =\"navBg\"\r\n      spacing={1}\r\n      justify=\"flex-end\"\r\n      alignItems=\"center\"\r\n      container\r\n      direction=\"row\"\r\n    >\r\n      <Grid lg={1} direction=\"column\">\r\n        <a href=\"google.com.br\"  className=\"navItem\">Home</a>\r\n      </Grid>\r\n      <Grid lg={1} direction=\"column\">\r\n        <a href=\"teste.com.br\" className=\"navItem\">Destinations</a>\r\n      </Grid>\r\n      <Grid lg={1} direction=\"column\">\r\n        <a className=\"navItem\">About</a>\r\n      </Grid>\r\n      <Grid lg={1} direction=\"column\">\r\n        <a className=\"navItem\">Partner</a>\r\n      </Grid>\r\n      <Grid xl = {1} justifyContent ='center' justify = \"center\" alignItems =\"center\" lg={2}>\r\n          <Button variant = \"outlined\" className = \"loginBtn\">\r\n              Login\r\n          </Button>\r\n       \r\n      </Grid>\r\n      <Grid  style={{width :\"80%\"}} xl ={1}lg={2} container justifyContent=\"center\" alignItems=\"center\">\r\n        <Button variant=\"contained\" className=\"registerBtn\">\r\n          Register\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//Css\r\nimport \"./styles/LearnMore.css\";\r\n//Core components\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n//Images\r\nimport learnMoreImage from \"../../assets/images/learnMoreImage.png\";\r\n\r\n\r\nexport default function LearnMore() {\r\n  return (\r\n    <Grid\r\n      lg={12}\r\n      xl={12}\r\n      spacing={6}\r\n      justify=\"space-around\"\r\n      alignItems=\"center\"\r\n      container\r\n      direction=\"row\"\r\n    >\r\n     \r\n      <Grid xl={1} />\r\n      <Grid direction=\"column\" sm={5} md={5} xs={10} xl={5} lg={5}>\r\n        <img className=\"learnMoreIlustration\" src={learnMoreImage} />\r\n      </Grid>\r\n\r\n      <Grid direction=\"column\" sm={6} md={5} xs={12} xl={4} lg={5}>\r\n        <h2 className=\"learnMoreTitle\">A new way to explore the world</h2>\r\n        <p className=\"learnMoreText\">\r\n          For decades travellers have reached for Lonely Planet books when\r\n          looking to plan and execute their perfect trip, but now, they can also\r\n          let Lonely Planet Experiences lead the way\r\n        </p>\r\n        <Button className=\"learnMoreButton\" variant=\"contained\">\r\n          Learn More\r\n        </Button>\r\n      </Grid>\r\n      <Grid xl={1} />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//Core components\r\nimport { Grid } from \"@material-ui/core\";\r\n//Images\r\nimport Fanjinghsan from \"../../assets/images/Fanjingshan.png\";\r\nimport Skadar from \"../../assets/images/Skadar.png\";\r\nimport RajaAmpat from \"../../assets/images/RajaAmpat.png\";\r\nimport Vevey from \"../../assets/images/Vevey.png\";\r\n//CSS\r\nimport \"../FeaturedDestinations/style/FeaturedDestinations.css\";\r\nlet height = window.innerHeight;\r\nlet width = window.innerWidth;\r\n//Height and width\r\n/*\r\nwindow.addEventListener(\"resize\", () => {\r\n  height = window.innerHeight;\r\n  width = window.innerWidth;\r\n  console.log(\"Altura\", height, \"Largura\", width);\r\n});\r\n*/\r\nlet destinations = [\r\n  {\r\n    name: \"Fanjinghsan\",\r\n    coutnry: \"China\",\r\n    url: Fanjinghsan,\r\n  },\r\n  {\r\n    name: \"Skadar\",\r\n    coutnry: \"Montenegrop\",\r\n    url: Skadar,\r\n  },\r\n  {\r\n    name: \"Vevey\",\r\n    coutnry: \"Switerzland\",\r\n    url: Vevey,\r\n  },\r\n  {\r\n    name: \"Raja ampat\",\r\n    coutnry: \"Indonesia\",\r\n    url: RajaAmpat,\r\n  },\r\n];\r\n\r\nexport default function FeaturedDestinations() {\r\n  const [justify, setJustify] = useState(\"space-around\");\r\n  const [width,setWidth] = useState(200)\r\n  function justifySpace(){\r\n    window.addEventListener(\"resize\" , () => {\r\n        \r\n        setWidth(window.innerWidth)\r\n        if(window.innerWidth > 400)\r\n        setJustify(\"space-around\")\r\n        else\r\n        setJustify(\"center\")\r\n        console.log('widht' , width ,'justify' , justify)\r\n    } )\r\n  }\r\n  useEffect(() => {\r\n    justifySpace()\r\n  }, []);\r\n  return (\r\n    <Grid style={{ marginTop: \"120px\" }}>\r\n      <Grid lg={8} direction=\"row\" justify=\"flex-start\" container>\r\n        <Grid xs={2} />\r\n        <h1 className=\"featuredDestinationsTitle\">Featured Destinations</h1>\r\n      </Grid>\r\n      <Grid\r\n        lg={12}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"row\"\r\n        container\r\n      >\r\n        <Grid xl={1} />\r\n        {destinations.map((destination) => {\r\n          return (\r\n            <Grid className ='imgGrid' direction=\"column\" sm ={5} md={5} xs={8} lg={2}>\r\n              <img className=\"destinationsImages\" src={destination.url} />\r\n            </Grid>\r\n          );\r\n        })}\r\n        <Grid xl={1} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React  , {Fragment} from 'react';\n\n//Components\nimport Navbar from './components/Navbar/Navbar'\n//Sections\nimport LearnMore from './Sections/LearnMore/LearnMore'\nimport FeaturedDestiantions from './Sections/FeaturedDestinations/FeaturedDestinations'\nfunction App() {\n  return (\n    <Fragment>\n      <Navbar/>\n      <LearnMore/>  \n      <FeaturedDestiantions/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}